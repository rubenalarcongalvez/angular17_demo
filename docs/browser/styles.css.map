{
  "version": 3,
  "sources": ["node_modules/@angular/material/core/ripple/_ripple.scss", "node_modules/@angular/cdk/a11y/_index.scss", "node_modules/@angular/cdk/overlay/_index.scss", "node_modules/@angular/cdk/text-field/_index.scss", "node_modules/@angular/material/core/focus-indicators/_private.scss", "node_modules/@angular/material/core/style/_layout-common.scss", "node_modules/@angular/material/core/style/_sass-utils.scss", "node_modules/@material/theme/_css.scss", "node_modules/@angular/material/core/option/_option-theme.scss", "node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss", "node_modules/@angular/material/core/_core-theme.scss", "node_modules/@angular/material/progress-bar/_progress-bar-theme.scss", "node_modules/@material/linear-progress/_linear-progress-theme.scss", "node_modules/@material/theme/_gss.scss", "node_modules/@material/dom/_dom.scss", "node_modules/@angular/material/form-field/_form-field-theme.scss", "node_modules/@angular/material/form-field/_form-field-density.scss", "node_modules/@angular/material/select/_select-theme.scss", "node_modules/@angular/material/chips/_chips-theme.scss", "node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss", "node_modules/@material/form-field/_form-field.scss", "node_modules/@angular/material/radio/_radio-theme.scss", "node_modules/@angular/material/slider/_slider-theme.scss", "node_modules/@angular/material/list/_list-theme.scss", "node_modules/@material/list/_list.scss", "node_modules/@angular/material/tabs/_tabs-theme.scss", "node_modules/@angular/material/checkbox/_checkbox-theme.scss", "node_modules/@angular/material/button/_button-theme.scss", "node_modules/@angular/material/button/_icon-button-theme.scss", "node_modules/@angular/material/button/_fab-theme.scss", "node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss", "node_modules/@angular/material/badge/_badge-theme.scss", "node_modules/@angular/material/datepicker/_datepicker-theme.scss", "node_modules/@angular/material/button/_button-base.scss", "node_modules/@angular/material/icon/_icon-theme.scss", "node_modules/@angular/material/stepper/_stepper-theme.scss", "node_modules/@angular/material/toolbar/_toolbar-theme.scss", "src/styles.scss"],
  "sourcesContent": ["@use '@angular/cdk';\n@use '../tokens/m2/mat/ripple' as tokens-mat-ripple;\n@use '../tokens/token-utils';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    @include token-utils.use-tokens(\n      tokens-mat-ripple.$prefix, tokens-mat-ripple.get-token-slots()) {\n      // We have to emit a fallback value here, because some internal builds depend on it.\n      background-color: var(#{token-utils.get-token-variable(color)}, rgba(#000, 0.1));\n    }\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n", "/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n", "// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n", "// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n", "@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n@use '../theming/inspection';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $border-color: inspection.get-theme-color($theme-or-color, primary);\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat');\n  }\n  @else {\n    @include theming.private-check-duplicate-theme-styles($theme-or-color, 'mat-focus-indicators') {\n      @if inspection.theme-has($theme-or-color, color) {\n        @include strong-focus-indicators-color($theme-or-color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $border-color: inspection.get-theme-color($theme-or-color, primary);\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    @include theming.private-check-duplicate-theme-styles(\n        $theme-or-color, 'mat-mdc-focus-indicators') {\n      @if inspection.theme-has($theme-or-color, color) {\n        @include mdc-strong-focus-indicators-color($theme-or-color);\n      }\n    }\n  }\n}\n", "// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n", "@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Include content under the current selector (&) or the document root if there is no current\n/// selector.\n/// @param {String} $root [html] The default root selector to use when there is no current selector.\n/// @output The given content under the current selector, or root selector if there is no current\n///     selector.\n/// @content Content to output under the current selector, or root selector if there is no current\n///     selector.\n@mixin current-selector-or-root($root: html) {\n  @if & {\n    @content;\n  }\n  @else {\n    #{$root} {\n      @content;\n    }\n  }\n}\n\n/// A version of the standard `map.merge` function that takes a variable number of arguments.\n/// Each argument is merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.merge\n/// @return {Map} The combined result of successively calling map.merge with each parameter.\n@function merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.merge($result, $map);\n  }\n  @return $result;\n}\n\n/// A version of the standard `map.deep-merge` function that takes a variable number of arguments.\n/// Each argument is deep-merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.deep-merge\n/// @return {Map} The combined result of successively calling map.deep-merge with each parameter.\n@function deep-merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.deep-merge($result, $map);\n  }\n  @return $result;\n}\n\n/// Coerces the given value to a list, by converting any non-list value into a single-item list.\n/// This should be used when dealing with user-passed lists of args to avoid confusing errors,\n/// since Sass treats `($x)` as equivalent to `$x`.\n/// @param {Any} $value The value to coerce to a list.\n/// @return {List} The original $value if it was a list, otherwise a single-item list containing\n///     $value.\n@function coerce-to-list($value) {\n  @return if(meta.type-of($value) != 'list', ($value,), $value);\n}\n\n/// A version of the Sass `color.change` function that is safe ot use with CSS variables.\n@function safe-color-change($color, $args...) {\n  $args: meta.keywords($args);\n  @return if(meta.type-of($color) == 'color', color.change($color, $args...), $color);\n}\n", "//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n", "@use '../tokens/m2/mat/option' as tokens-mat-option;\n@use '../tokens/token-utils';\n@use '../style/sass-utils';\n\n@use '../theming/theming';\n@use '../theming/inspection';\n@use '../typography/typography';\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-color-tokens($theme));\n  }\n\n  .mat-accent {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-color-tokens($theme, accent));\n  }\n\n  .mat-warn {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-color-tokens($theme, warn));\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use '../../theming/theming';\n@use '../../theming/inspection';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin base($theme) {\n  // TODO(mmalerba): Move pseudo checkbox base tokens here\n}\n\n@mixin color($theme) {\n  $is-dark-theme: inspection.get-theme-type($theme) == dark;\n  $primary: inspection.get-theme-color($theme, primary);\n  $accent: inspection.get-theme-color($theme, accent);\n  $warn: inspection.get-theme-color($theme, warn);\n  $background: inspection.get-theme-color($theme, background, background);\n  $secondary-text: inspection.get-theme-color($theme, foreground, secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin _density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include _density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use './theming/theming';\n@use './theming/inspection';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n@use './typography/typography';\n\n@mixin base($theme) {\n  @include ripple-theme.base($theme);\n  @include option-theme.base($theme);\n  @include optgroup-theme.base($theme);\n  @include pseudo-checkbox-theme.base($theme);\n  // TODO(mmalerba): Move additional core base tokens here\n}\n\n@mixin color($theme) {\n  @include ripple-theme.color($theme);\n  @include option-theme.color($theme);\n  @include optgroup-theme.color($theme);\n  @include pseudo-checkbox-theme.color($theme);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    background-color: inspection.get-theme-color($theme, background, background);\n    color: inspection.get-theme-color($theme, foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    $selector: elevation.$prefix + $zValue;\n    // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n    // come with elevation baked in and we don't have a way of removing it.\n    .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n      @include private.private-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include option-theme.typography($theme);\n  @include optgroup-theme.typography($theme);\n  @include pseudo-checkbox-theme.typography($theme);\n  @include ripple-theme.typography($theme);\n}\n\n@mixin density($theme) {\n  @include option-theme.density($theme);\n  @include optgroup-theme.density($theme);\n  @include ripple-theme.density($theme);\n\n  // TODO(mmalerba): add density mixins for these.\n  // @include pseudo-checkbox-theme.density($theme);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme) {\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use 'sass:map';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/linear-progress' as tokens-mdc-linear-progress;\n@use '@material/linear-progress/linear-progress-theme' as mdc-linear-progress-theme;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-linear-progress-theme.theme(tokens-mdc-linear-progress.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin _palette-styles($theme, $palette-name) {\n  $color-tokens: tokens-mdc-linear-progress.get-color-tokens($theme, $palette-name);\n\n  // We can't set the `track-color` using `theme`, because it isn't possible for it to use a CSS\n  // variable since MDC's buffer animation works by constructing an SVG string from this color.\n  // We also can't set the `track-color` by creating our own token slot because the track-color\n  // is set in the SVG string in `theme-styles`.\n  @include mdc-linear-progress-theme.theme-styles((\n    // TODO(crisbeto): the buffer color should come from somewhere in MDC, however at the time of\n    // writing, their buffer color is hardcoded to #e6e6e6 which both doesn't account for theming\n    // and doesn't match the Material design spec. For now we approximate the buffer background by\n    // applying an opacity to the color of the bar.\n    track-color: map.get($color-tokens, track-color),\n  ));\n\n  @include mdc-linear-progress-theme.theme($color-tokens);\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    .mat-mdc-progress-bar {\n      @include _palette-styles($theme, primary);\n\n      &.mat-accent {\n        @include _palette-styles($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-linear-progress-theme.theme(map.get($tokens, tokens-mdc-linear-progress.$prefix));\n  }\n}\n", "//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:string';\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/keys';\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n\n$custom-property-prefix: 'linear-progress';\n\n// TODO(b/254889918): Support all linear progress tokens.\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  active-indicator-height: 4px,\n  track-color: $baseline-buffer-color,\n  track-height: 4px,\n  track-shape: 0px,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include buffering-keyframes(map.get($theme, track-height), $query);\n  @include bar-color(map.get($theme, active-indicator-color), $query);\n  @include buffer-color(map.get($theme, track-color), $query);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        height,\n        'max(track-height, bar-height)',\n        $replace: (\n          track-height: map.get($theme, track-height),\n          bar-height: map.get($theme, active-indicator-height)\n        )\n      );\n\n      @include dom.ie11-support() {\n        $track-height: map.get($theme, track-height);\n        $track-height: if(\n          custom-properties.is-custom-prop($track-height),\n          custom-properties.get-fallback($track-height),\n          $track-height\n        );\n\n        $bar-height: map.get($theme, active-indicator-height);\n        $bar-height: if(\n          custom-properties.is-custom-prop($bar-height),\n          custom-properties.get-fallback($bar-height),\n          $bar-height\n        );\n\n        @if ($track-height != null) and\n          ($bar-height != null) and\n          (not custom-properties.is-custom-prop-string($track-height)) and\n          (not custom-properties.is-custom-prop-string($bar-height))\n        {\n          @include theme.property(height, math.max($track-height, $bar-height));\n        }\n      }\n    }\n  }\n\n  @include _bar-height(map.get($theme, active-indicator-height), $query);\n  @include _track-height(map.get($theme, track-height), $query);\n  @include _track-shape(map.get($theme, track-shape), $query);\n\n  // TODO(b/155129310): Add styles for 4-color linear progress once this variant\n  // is supported.\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $concrete-color: $color;\n  @if custom-properties.is-custom-prop($color) {\n    $concrete-color: custom-properties.get-fallback($color);\n  }\n  $concrete-color-for-svg: str-replace_(\n    string.unquote('#{$concrete-color}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      @media (forced-colors: active) {\n        background-color: ButtonBorder;\n      }\n\n      @include dom.ie11-support() {\n        background-color: transparent;\n        // stylelint-disable function-url-quotes -- SVG data URI\n        // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n        @include theme.property(\n          background-image,\n          url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='concrete-color-for-svg'/%3E%3C/svg%3E\"),\n          $replace: (concrete-color-for-svg: $concrete-color-for-svg)\n        );\n        // stylelint-enable function-url-quotes\n      }\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n/// @deprecated Use Theming API instead.\n@mixin bar-and-track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n\n  @include _bar-height($height, $query);\n  @include _track-height($height, $query);\n}\n\n@mixin buffering-keyframes($track-height, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-linear-progress-buffering {\n      from {\n        // Normally the buffer dots start from the left and overflow to the right.\n        // We rotate by 180deg so that the buffer dots start on the right when\n        // in non-reversed mode and overflow to the left.\n        @include rtl.ignore-next-line();\n        @include theme.property(\n          transform,\n          'rotate(180deg) translateX(calc(track-height * -2.5))',\n          $replace: (track-height: $track-height)\n        );\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n\n@mixin _bar-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__bar {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__bar-inner {\n      @include theme.property(border-top-width, $height);\n    }\n  }\n}\n\n@mixin _track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__buffer-dots {\n      @include dom.ie11-support() {\n        @include theme.property(\n          background-size,\n          10px height,\n          $replace: (height: $height)\n        );\n      }\n    }\n  }\n}\n\n@mixin _track-shape($shape, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(border-radius, $shape);\n    }\n  }\n}\n", "//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n", "// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    @include rtl.ignore-next-line();\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n", "@use '@material/textfield/filled-text-field-theme' as mdc-filled-text-field-theme;\n@use '@material/textfield/outlined-text-field-theme' as mdc-outlined-text-field-theme;\n\n@use '../core/tokens/m2/mdc/filled-text-field' as tokens-mdc-filled-text-field;\n@use '../core/tokens/m2/mdc/outlined-text-field' as tokens-mdc-outlined-text-field;\n@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use './form-field-density';\n\n@mixin base($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(\n        tokens-mdc-filled-text-field.$prefix,\n        tokens-mdc-filled-text-field.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mdc-outlined-text-field.$prefix,\n        tokens-mdc-outlined-text-field.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mat-form-field.$prefix,\n        tokens-mat-form-field.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-color-tokens($theme));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-color-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-color-tokens($theme));\n  }\n\n  .mat-mdc-form-field.mat-accent {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($theme, accent));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($theme, accent));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.private-get-color-palette-color-tokens($theme, accent));\n  }\n\n  .mat-mdc-form-field.mat-warn {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($theme, warn));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($theme, warn));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.private-get-color-palette-color-tokens($theme, warn));\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-typography-tokens($theme));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-typography-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  @include form-field-density.private-form-field-density($theme);\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use 'sass:map';\n@use 'sass:math';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/theming/inspection';\n\n@use './form-field-sizing';\n\n// Mixin that sets the vertical spacing for the infix container of filled form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-filled($with-label-padding, $no-label-padding) {\n  .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n    padding-top: map.get($with-label-padding, top);\n    padding-bottom: map.get($with-label-padding, bottom);\n  }\n\n  .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)\n  .mat-mdc-form-field-infix {\n    padding-top: map.get($no-label-padding, top);\n    padding-bottom: map.get($no-label-padding, bottom);\n  }\n}\n\n// Mixin that sets the vertical spacing for the infix container of outlined form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-outlined($padding) {\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n    padding-top: map.get($padding, top);\n    padding-bottom: map.get($padding, bottom);\n  }\n}\n\n// Mixin that includes the density styles for form fields. MDC provides their own density\n// styles for MDC text-field which we cannot use. MDC relies on input elements to stretch\n// vertically when the height is reduced as per density scale. This doesn't work for our\n// form field since we support custom form field controls without a fixed height. Instead, we\n// provide spacing that makes arbitrary controls align as specified in the Material Design\n// specification. In order to support density, we need to adjust the vertical spacing to be\n// based on the density scale.\n@mixin private-form-field-density($theme) {\n  // Height of the form field that is based on the current density scale.\n  $height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: inspection.get-theme-density($theme),\n    $property-name: height,\n  );\n\n  // Whether floating labels for filled form fields should be hidden. MDC hides the label in\n  // their density styles when the height decreases too much. We match their density styles.\n  $hide-filled-floating-label: $height < mdc-textfield.$minimum-height-for-filled-label;\n  // We computed the desired height of the form-field using the density configuration. The\n  // spec only describes vertical spacing/alignment in non-dense mode. This means that we\n  // cannot update the spacing to explicit numbers based on the density scale. Instead, we\n  // determine the height reduction and equally subtract it from the default `top` and `bottom`\n  // padding that is provided by the Material Design specification.\n  $vertical-deduction: math.div(mdc-textfield.$height - $height, 2);\n  // Map that describes the padding for form-fields with label.\n  $with-label-padding: (\n    top: form-field-sizing.$mat-form-field-with-label-input-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-with-label-input-padding-bottom - $vertical-deduction,\n  );\n  // Map that describes the padding for form-fields without label.\n  $no-label-padding: (\n    top: form-field-sizing.$mat-form-field-no-label-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-no-label-padding-bottom - $vertical-deduction,\n  );\n\n  // We add a minimum height to the infix container in order to ensure that custom controls have\n  // the same default vertical space as text-field inputs (with respect to the vertical padding).\n  .mat-mdc-form-field-infix {\n    min-height: $height;\n  }\n\n  // By default, MDC aligns the label using percentage. This will be overwritten based\n  // on whether a textarea is used. This is not possible in our implementation of the\n  // form-field because we do not know what type of form-field control is set up. Hence\n  // we always use a fixed position for the label. This does not have any implications.\n  .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n    top: math.div($height, 2);\n  }\n\n  // For the outline appearance, we re-create the active floating label transform. This is\n  // necessary because the transform for docked floating labels can be updated to account for\n  // the width of prefix container.\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded\n  .mdc-floating-label--float-above {\n    --mat-mdc-form-field-label-transform: translateY(\n            -#{mdc-textfield.get-outlined-label-position-y($height)})\n            scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n    transform: var(--mat-mdc-form-field-label-transform);\n  }\n\n  // Add vertical spacing to the infix to ensure that outlined form fields have their controls\n  // aligned as if there is no label. This is done similarly in MDC and is specified in the\n  // Material Design specification. Outline form fields position the control as if there is no\n  // label. This is because the label overflows the form-field and doesn't need space at the top.\n  @include _infix-vertical-spacing-outlined($no-label-padding);\n\n  // MDC hides labels for filled form fields when the form field height decreases. We match\n  // this behavior in our custom density styles.\n  @if $hide-filled-floating-label {\n    // Update the spacing for filled form fields to account for the hidden floating label.\n    @include _infix-vertical-spacing-filled(\n          $no-label-padding, $no-label-padding);\n    .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n        display: none;\n    }\n  }\n  @else {\n    // By default, filled form fields align their controls differently based on whether there\n    // is a label or not. MDC does this too, but we cannot rely on their styles as we support\n    // arbitrary form field controls and MDC only applies their spacing to the `<input>` elements.\n    @include _infix-vertical-spacing-filled(\n          $with-label-padding, $no-label-padding);\n  }\n}\n", "@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/tokens/m2/mat/select' as tokens-mat-select;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-color-tokens($theme));\n\n    .mat-mdc-form-field.mat-accent {\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($theme, accent));\n    }\n\n    .mat-mdc-form-field.mat-warn {\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($theme, warn));\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n\n  // Density is clamped at -5 here, because MDC's form field throws an error for anything lower.\n  $form-field-height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: theming.clamp-density($density-scale, -5),\n    $property-name: height,\n  );\n\n  // On lower densities the filled form field hides its label which causes the label to\n  // be misaligned. Remove the additional offset that was added because of the label.\n  @if ($form-field-height < mdc-textfield.$minimum-height-for-filled-label) {\n    .mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper {\n      transform: none;\n    }\n  }\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-density-tokens($theme));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use 'sass:color';\n@use '@material/chips/chip-theme' as mdc-chip-theme;\n@use '../core/tokens/m2/mdc/chip' as tokens-mdc-chip;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n\n@mixin base($theme) {\n  .mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme(tokens-mdc-chip.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  .mat-mdc-standard-chip {\n    $default-color-tokens: tokens-mdc-chip.get-color-tokens($theme);\n    @include mdc-chip-theme.theme($default-color-tokens);\n\n    &.mat-mdc-chip-selected,\n    &.mat-mdc-chip-highlighted {\n      &.mat-primary {\n        $primary-color-tokens: tokens-mdc-chip.get-color-tokens($theme, primary);\n        @include mdc-chip-theme.theme($primary-color-tokens);\n      }\n\n      &.mat-accent {\n        $accent-color-tokens: tokens-mdc-chip.get-color-tokens($theme, accent);\n        @include mdc-chip-theme.theme($accent-color-tokens);\n      }\n\n      &.mat-warn {\n        $warn-color-tokens: tokens-mdc-chip.get-color-tokens($theme, warn);\n        @include mdc-chip-theme.theme($warn-color-tokens);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  $typography-tokens: tokens-mdc-chip.get-typography-tokens($theme);\n\n  .mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($theme) {\n  $density-tokens: tokens-mdc-chip.get-density-tokens($theme);\n\n  .mat-mdc-chip.mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($density-tokens);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use '@material/switch/switch-theme' as mdc-switch-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/switch' as m2-mdc-switch;\n@use '../core/tokens/m2/mat/slide-toggle' as m2-mat-slide-toggle;\n@use '../core/tokens/token-utils';\n\n@mixin base($theme) {\n  .mdc-switch {\n    @include mdc-switch-theme.theme(m2-mdc-switch.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  $is-dark: inspection.get-theme-type($theme) == dark;\n  $mdc-switch-color-tokens: m2-mdc-switch.get-color-tokens($theme);\n\n  @include mdc-helpers.using-mdc-theme($theme) {\n    // Add values for MDC slide toggles tokens\n    .mat-mdc-slide-toggle {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-switch-theme.theme($mdc-switch-color-tokens);\n\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      .mdc-switch--disabled + label {\n        color: inspection.get-theme-color($theme, foreground, disabled-text);\n      }\n\n      // Change the color palette related tokens to accent or warn if applicable\n      &.mat-accent {\n        @include mdc-switch-theme.theme(\n            m2-mdc-switch.private-get-color-palette-color-tokens($theme, accent));\n      }\n\n      &.mat-warn {\n        @include mdc-switch-theme.theme(\n            m2-mdc-switch.private-get-color-palette-color-tokens($theme, warn));\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  $mdc-switch-typography-tokens: m2-mdc-switch.get-typography-tokens($theme);\n  $mat-slide-toggle-typography-tokens: m2-mat-slide-toggle.get-typography-tokens($theme);\n\n  //Add values for MDC slide toggle tokens\n  .mat-mdc-slide-toggle {\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-switch-theme.theme($mdc-switch-typography-tokens);\n    @include token-utils.create-token-values(\n      m2-mat-slide-toggle.$prefix,\n      $mat-slide-toggle-typography-tokens\n    );\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n\n  .mat-mdc-slide-toggle {\n    @include mdc-switch-theme.theme(mdc-switch-theme.density($density-scale));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "//\n// Copyright 2023 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './form-field-theme';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include static-styles($query);\n\n  // TODO: Replace with call to theme-styles after Angular moves to Theming API\n  .mdc-form-field {\n    @include typography.typography(body2, $query);\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-form-field {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      &[hidden] {\n        display: none;\n      }\n      align-items: center;\n      vertical-align: middle;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, 0, auto);\n        @include rtl.reflexive-property(padding, variables.$item-spacing, 0);\n\n        order: 0;\n      }\n    }\n  }\n\n  .mdc-form-field--nowrap {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  .mdc-form-field--align-end {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, auto, 0);\n        @include rtl.reflexive-property(padding, 0, variables.$item-spacing);\n\n        order: -1;\n      }\n    }\n  }\n\n  .mdc-form-field--space-between {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0;\n\n        @include rtl.rtl {\n          // RTL needed for specificity\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n", "@use 'sass:map';\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mat/radio' as tokens-mat-radio;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-unthemable-tokens());\n      @include token-utils.create-token-values(\n          tokens-mat-radio.$prefix, tokens-mat-radio.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include mdc-helpers.using-mdc-theme($theme) {\n      .mat-mdc-radio-button {\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n\n    .mat-mdc-radio-button {\n      &.mat-primary {\n        @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, primary));\n        @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n          tokens-mat-radio.get-color-tokens($theme, primary));\n      }\n\n      &.mat-accent {\n        @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme));\n        @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n          tokens-mat-radio.get-color-tokens($theme));\n      }\n\n      &.mat-warn {\n        @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, warn));\n        @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n          tokens-mat-radio.get-color-tokens($theme, warn));\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-typography-tokens($theme));\n    }\n\n    .mat-mdc-radio-button {\n      @include mdc-helpers.using-mdc-typography($theme) {\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n      }\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    $density-scale: inspection.get-theme-density($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-density-tokens($theme));\n    }\n\n    @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n      .mat-mdc-radio-touch-target {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-radio-theme.theme(map.get($tokens, tokens-mdc-radio.$prefix));\n    @include token-utils.create-token-values(\n        tokens-mat-radio.$prefix, map.get($tokens, tokens-mat-radio.$prefix));\n  }\n}\n", "@use 'sass:map';\n@use '@material/slider/slider-theme' as mdc-slider-theme;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/slider' as tokens-mat-slider;\n@use '../core/tokens/m2/mdc/slider' as tokens-mdc-slider;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-slider-theme.theme(tokens-mdc-slider.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    $is-dark: inspection.get-theme-type($theme) == dark;\n\n    $mdc-color-tokens: token-utils.resolve-elevation(\n        tokens-mdc-slider.get-color-tokens($theme),\n        handle-elevation,\n        handle-shadow-color\n    );\n\n    $mat-slider-color-tokens: tokens-mat-slider.get-color-tokens($theme);\n\n  // Add values for MDC slider tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-slider-theme.theme($mdc-color-tokens);\n    @include _slider-ripple-color($theme, primary);\n    @include token-utils.create-token-values(\n      tokens-mat-slider.$prefix,\n      $mat-slider-color-tokens\n    );\n\n    .mat-accent {\n      @include mdc-slider-theme.theme(\n        tokens-mdc-slider.private-get-color-palette-color-tokens($theme, accent));\n      @include _slider-ripple-color($theme, accent);\n    }\n\n      .mat-warn {\n        @include mdc-slider-theme.theme(\n            tokens-mdc-slider.private-get-color-palette-color-tokens($theme, warn));\n        @include _slider-ripple-color($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    // Add values for MDC slider tokens.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-slider-theme.theme(tokens-mdc-slider.get-typography-tokens($theme));\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    // Add values for MDC slider tokens.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-slider-theme.theme(tokens-mdc-slider.get-density-tokens($theme));\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n// Generated MDC ripple color tokens are not being calculated so needs to be set\n@mixin _slider-ripple-color($theme, $palette-name) {\n  $color: inspection.get-theme-color($theme, $palette-name);\n\n  --mat-mdc-slider-ripple-color: #{$color};\n  --mat-mdc-slider-hover-ripple-color: #{rgba($color, 0.05)};\n  --mat-mdc-slider-focus-ripple-color: #{rgba($color, 0.2)};\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-slider-theme.theme(map.get($tokens, tokens-mdc-slider.$prefix));\n    @include token-utils.create-token-values(\n        tokens-mat-slider.$prefix, map.get($tokens, tokens-mat-slider.$prefix));\n  }\n}\n", "@use 'sass:map';\n@use '@material/list/evolution-mixins';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/list/list-theme' as mdc-list-theme;\n\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mdc/list' as tokens-mdc-list;\n@use '../core/typography/typography';\n\n@mixin base($theme) {\n  // Add default values for tokens not related to color, typography, or density.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme(tokens-mdc-list.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  $mdc-list-color-tokens: tokens-mdc-list.get-color-tokens($theme);\n\n  // Add values for MDC list tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme($mdc-list-color-tokens);\n  }\n\n  .mdc-list-item__start,\n  .mdc-list-item__end {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, primary));\n  }\n\n  .mat-accent {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, accent));\n    }\n  }\n\n  .mat-warn {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, warn));\n    }\n  }\n\n  .mat-mdc-list-option {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, primary));\n  }\n  .mat-mdc-list-option.mat-accent {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, accent));\n  }\n  .mat-mdc-list-option.mat-warn {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, warn));\n  }\n\n  // There is no token for activated color on nav list.\n  // TODO(mmalerba): Add a token to MDC or make a custom one.\n  .mat-mdc-list-base.mat-mdc-list-base {\n    @include evolution-mixins.list-selected-ink-color(inspection.get-theme-color($theme, primary));\n  }\n\n  // TODO(mmalerba): Leaking styles from the old MDC list mixins used in other components can cause\n  //  opacity issues, so we need this override for now. We can remove it when all Angular Material\n  //  components stop using the old MDC mixins.\n  .mat-mdc-list-base .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n  $mdc-list-density-tokens: tokens-mdc-list.get-density-tokens($theme);\n\n  // Add values for MDC list tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme($mdc-list-density-tokens);\n  }\n\n  .mdc-list-item__start,\n  .mdc-list-item__end {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-density-tokens($theme));\n  }\n\n  // TODO(mmalerba): This is added to maintain the same style MDC used prior to the token-based API,\n  //  to avoid screenshot diffs. We should remove it in favor of following MDC's current style, or\n  //  add custom tokens for it.\n  .mat-mdc-list-item {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-icon {\n      &.mdc-list-item--with-one-line {\n        height: map.get((\n            0: 56px,\n            -1: 52px,\n            -2: 48px,\n            -3: 44px,\n            -4: 40px,\n            -5: 40px,\n        ), $density-scale);\n      }\n\n      &.mdc-list-item--with-two-lines {\n        height: map.get((\n            0: 72px,\n            -1: 68px,\n            -2: 64px,\n            -3: 60px,\n            -4: 56px,\n            -5: 56px,\n        ), $density-scale);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  $mdc-list-typography-tokens: tokens-mdc-list.get-typography-tokens($theme);\n\n  // Add values for MDC list tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme($mdc-list-typography-tokens);\n  }\n\n  // MDC does not have tokens for the subheader.\n  // TODO(mmalerba): Discuss with MDC about adding them, or create custom tokens.\n  .mdc-list-group__subheader {\n    font: inspection.get-theme-typography($theme, subtitle-1, font);\n    letter-spacing: inspection.get-theme-typography($theme, subtitle-1, letter-spacing);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "//\n// Copyright 2022 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Internal stylesheet for material list component. Selector '.mdc-*' should\n// only be used in this project.\n\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './evolution-variables' as variables;\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n\n$ripple-target: variables.$ripple-target;\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _high-contrast-mode($query: $query);\n  .mdc-list {\n    @include _static-list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n    @include _list-item-baseline-height($query: $query);\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // TODO(b/254711887): Likely need to update this to adhere to a HCM focus\n    // ring spec.\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _multi-line-item-end-text-baseline($query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-text-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n  .mdc-list-group__subheader {\n    @include _list-group-subheader-margin($query: $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode-border-color($query);\n\n  .mdc-list {\n    @include _typography-list-base($query: $query);\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-size(56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-group__subheader {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n  @include static-styles($query: $query);\n} // end of without-ripple\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// Mixins that apply baseline height for one-, two-, and three- line item\n// container heights. This mixin calls the density mixins so that the styles\n// can be overwritten by future density mixin calls.\n@mixin _list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _two-line-item-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _three-line-item-density(\n    variables.$three-line-item-density-scale,\n    $query: $query\n  );\n}\n\n@mixin _tall-list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-tall-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n  @include _two-line-item-tall-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n}\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n\n  @if ($density-scale and $density-scale != 0) {\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .mdc-list-item__primary-text,\n      .mdc-list-item__secondary-text {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        line-height: 1.4;\n        &::before,\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n// Split the list-base mixin into two sub-mixins, one holding the\n// structural/static styles (static-list-base) and the other holding styles\n// that are themable (typography-list-base). However, the existing list-base\n// mixin need to be preserved as Angular calls this mixin for autocomplete\n// base styling.\n@mixin _typography-list-base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n}\n\n@mixin _static-list-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  @include _typography-list-base($query: $query);\n  @include _static-list-base($query: $query);\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.surface-styles($query: $query);\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-text-baseline($query: feature-targeting.all()) {\n  @include _two-line-item-primary-text-baseline(32px, 20px, $query: $query);\n  @include _two-line-item-overline-text-baseline(28px, 20px, $query: $query);\n  @include _two-line-item-meta-text-baseline($top: 32px, $query: $query);\n}\n\n@mixin _two-line-item-primary-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _multi-line-item-end-text-baseline($query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-text-baseline(\n  $top,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode-border-color($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-list-divider::after {\n    @include feature-targeting.targets($feat-color) {\n      // Color ensures border is shown, but will be overridden by the browser.\n      @include theme.property(border-bottom-color, white);\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n    }\n  }\n}\n\n@mixin _list-group-subheader-margin($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $mdc-list-subheader-virtual-height: 3rem;\n  $mdc-list-subheader-leading: map.get(\n    map.get(typography.$styles, body1),\n    line-height\n  );\n  $mdc-list-subheader-margin: calc(\n    (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) / 2\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $mdc-list-subheader-margin variables.$side-padding;\n  }\n}\n", "@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;\n@use '@material/tab/tab-theme' as mdc-tab-theme;\n@use '../core/style/sass-utils';\n@use '../core/tokens/m2/mdc/tab' as tokens-mdc-tab;\n@use '../core/tokens/m2/mdc/tab-indicator' as tokens-mdc-tab-indicator;\n@use '../core/tokens/m2/mat/tab-header' as tokens-mat-tab-header;\n@use '../core/tokens/m2/mat/tab-header-with-background' as tokens-mat-tab-header-with-background;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n@mixin base($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-tab-indicator-theme.theme(tokens-mdc-tab-indicator.get-unthemable-tokens());\n    @include mdc-tab-theme.secondary-navigation-tab-theme(tokens-mdc-tab.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mat-tab-header.$prefix, tokens-mat-tab-header.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mat-tab-header-with-background.$prefix,\n        tokens-mat-tab-header-with-background.get-unthemable-tokens()\n    );\n  }\n}\n\n@mixin color($theme) {\n  .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n    @include _palette-styles($theme, primary);\n\n    &.mat-accent {\n      @include _palette-styles($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($theme, warn);\n    }\n\n    &.mat-background-primary {\n      @include _background-styles($theme, primary);\n    }\n\n    &.mat-background-accent {\n      @include _background-styles($theme, accent);\n    }\n\n    &.mat-background-warn {\n      @include _background-styles($theme, warn);\n    }\n  }\n}\n\n@mixin _background-styles($theme, $palette-name) {\n  @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n    tokens-mat-tab-header-with-background.get-color-tokens($theme, $palette-name));\n}\n\n@mixin _palette-styles($theme, $palette-name) {\n  @include mdc-tab-theme.secondary-navigation-tab-theme(\n    tokens-mdc-tab.get-color-tokens($theme, $palette-name));\n  @include mdc-tab-indicator-theme.theme(\n    tokens-mdc-tab-indicator.get-color-tokens($theme, $palette-name));\n  @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n   tokens-mat-tab-header.get-color-tokens($theme, $palette-name));\n}\n\n@mixin typography($theme) {\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-typography-tokens($theme));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-typography-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-typography-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-density-tokens($theme));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-density-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-density-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-density-tokens($theme));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n\n", "@use 'sass:map';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme));\n    }\n\n    .mat-mdc-checkbox {\n      &.mat-primary {\n        @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, primary));\n      }\n\n      &.mat-warn {\n        @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, warn));\n      }\n\n      @include mdc-helpers.using-mdc-theme($theme) {\n        // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      }\n\n      &.mat-mdc-checkbox-disabled label {\n        // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n        color: inspection.get-theme-color($theme, foreground, disabled-text);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-typography-tokens($theme));\n    }\n\n    .mat-mdc-checkbox {\n      @include mdc-helpers.using-mdc-typography($theme) {\n        // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n      }\n    }\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-density-tokens($theme));\n    }\n\n    @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n      .mat-mdc-checkbox-touch-target {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    // TODO(mmalerba): Some of the theme styles above are not represented in terms of tokens,\n    //   so this mixin is currently incomplete.\n    @include mdc-checkbox-theme.theme(map.get($tokens, tokens-mdc-checkbox.$prefix));\n  }\n}\n", "@use '@material/button/button' as mdc-button;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/elevation/elevation-theme' as mdc-elevation-theme;\n\n@use './button-base';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/filled-button' as tokens-mdc-filled-button;\n@use '../core/tokens/m2/mat/filled-button' as tokens-mat-filled-button;\n@use '../core/tokens/m2/mdc/outlined-button' as tokens-mdc-outlined-button;\n@use '../core/tokens/m2/mat/outlined-button' as tokens-mat-outlined-button;\n@use '../core/tokens/m2/mdc/protected-button' as tokens-mdc-protected-button;\n@use '../core/tokens/m2/mat/protected-button' as tokens-mat-protected-button;\n@use '../core/tokens/m2/mdc/text-button' as tokens-mdc-text-button;\n@use '../core/tokens/m2/mat/text-button' as tokens-mat-text-button;\n\n\n@mixin _text-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-text-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-text-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-text-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-text-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-text-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-text-button.$prefix, $mat-tokens);\n}\n\n@mixin _filled-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-filled-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-filled-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-filled-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-filled-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-filled-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-filled-button.$prefix, $mat-tokens);\n}\n\n@mixin _protected-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-protected-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-protected-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-protected-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-protected-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-protected-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-protected-button.$prefix, $mat-tokens);\n}\n\n@mixin _outlined-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-outlined-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-outlined-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-outlined-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-outlined-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-outlined-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-outlined-button.$prefix, $mat-tokens);\n}\n\n@mixin base($theme) {\n  // TODO(mmalerba): Move button base tokens here\n}\n\n@mixin color($theme) {\n  .mat-mdc-button {\n    @include _text-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _text-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _text-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _text-button-variant($theme, warn);\n    }\n  }\n\n  .mat-mdc-unelevated-button {\n    @include _filled-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _filled-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _filled-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _filled-button-variant($theme, warn);\n    }\n  }\n\n  .mat-mdc-raised-button {\n    @include _protected-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _protected-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _protected-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _protected-button-variant($theme, warn);\n    }\n\n    // TODO(wagnermaciel): Remove this workaround when b/301126527 is resolved\n    @include mdc-helpers.disable-mdc-fallback-declarations {\n      @include mdc-elevation-theme.elevation(2);\n\n      &:hover, &:focus {\n        @include mdc-elevation-theme.elevation(4);\n      }\n\n      &:active, &:focus:active {\n        @include mdc-elevation-theme.elevation(8);\n      }\n    }\n  }\n\n  .mat-mdc-outlined-button {\n    @include _outlined-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _outlined-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _outlined-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _outlined-button-variant($theme, warn);\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include mdc-helpers.using-mdc-typography($theme) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: theming.clamp-density(inspection.get-theme-density($theme), -3);\n\n  .mat-mdc-button {\n    $density-tokens: tokens-mdc-text-button.get-density-tokens($theme);\n    @include mdc-button-text-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n\n  .mat-mdc-raised-button {\n    $density-tokens: tokens-mdc-protected-button.get-density-tokens($theme);\n    @include mdc-button-protected-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n\n  .mat-mdc-unelevated-button {\n    $density-tokens: tokens-mdc-filled-button.get-density-tokens($theme);\n    @include mdc-button-filled-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n\n  .mat-mdc-outlined-button {\n    $density-tokens: tokens-mdc-outlined-button.get-density-tokens($theme);\n    @include mdc-button-outlined-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use 'sass:math';\n@use '@material/density/functions' as mdc-density-functions;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '../core/tokens/m2/mdc/icon-button' as tokens-mdc-icon-button;\n@use '../core/tokens/m2/mat/icon-button' as tokens-mat-icon-button;\n\n@use './button-base';\n@use '../core/tokens/token-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n\n\n@mixin base($theme) {\n  // TODO(mmalerba): Move icon button base tokens here\n}\n\n@mixin _icon-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-icon-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-icon-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-icon-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-icon-button.get-color-tokens($theme)\n  );\n\n  @include mdc-icon-button-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-icon-button.$prefix, $mat-tokens);\n}\n\n@mixin color($theme) {\n  .mat-mdc-icon-button {\n    @include _icon-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _icon-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _icon-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _icon-button-variant($theme, warn);\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin density($theme) {\n  $icon-size: 24px;\n  $density-scale: inspection.get-theme-density($theme);\n  // Manually apply the expected density theming, and include the padding\n  // as it was applied before\n  $calculated-size: mdc-density-functions.prop-value(\n    $density-config: (\n      size: (\n        default: 48px,\n        maximum: 48px,\n        minimum: 28px,\n      ),\n    ),\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    // Match the styles that used to be present. This is necessary for backwards\n    // compat to match the previous implementations selector count (two classes).\n    @include mdc-icon-button-theme.theme((\n      state-layer-size: $calculated-size,\n    ));\n\n    // TODO: Switch calculated-size to \"var(--mdc-icon-button-state-layer-size)\"\n    // Currently fails validation because the variable is \"undefined\"\n    // in the sass stack.\n    // TODO: Switch icon-size to \"var(--mdc-icon-button-icon-size)\". Currently\n    // fails validation because the variable is \"undefined\" in the sass stack.\n    width: var(--mdc-icon-button-state-layer-size);\n    height: var(--mdc-icon-button-state-layer-size);\n    padding: math.div($calculated-size - $icon-size, 2);\n\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use '@material/fab/fab' as mdc-fab;\n@use '@material/fab/fab-theme' as mdc-fab-theme;\n@use '@material/fab/extended-fab-theme' as mdc-extended-fab-theme;\n\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/fab' as tokens-mdc-fab;\n@use '../core/tokens/m2/mdc/extended-fab' as tokens-mdc-extended-fab;\n@use '../core/tokens/m2/mat/fab' as tokens-mat-fab;\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n\n@mixin base($theme) {\n  // Add default values for tokens not related to color, typography, or density.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-fab-theme.theme(tokens-mdc-fab.get-unthemable-tokens());\n    @include mdc-extended-fab-theme.theme(\n      tokens-mdc-extended-fab.get-unthemable-tokens()\n    );\n  }\n}\n\n@mixin _fab-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-fab.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-fab.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-fab.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-fab.get-color-tokens($theme)\n  );\n\n  @include mdc-fab-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-fab.$prefix, $mat-tokens);\n}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include _fab-variant($theme, null);\n\n    .mat-mdc-fab,\n    .mat-mdc-mini-fab {\n      &.mat-primary {\n        @include _fab-variant($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _fab-variant($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _fab-variant($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include mdc-helpers.using-mdc-typography($theme) {\n    @include mdc-fab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n\n  $typography-tokens: tokens-mdc-extended-fab.get-typography-tokens($theme);\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-extended-fab-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($theme) {\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-fab') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use 'sass:map';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/circular-progress' as tokens-mdc-circular-progress;\n@use '@material/circular-progress/circular-progress-theme' as mdc-circular-progress-theme;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-circular-progress-theme.theme(\n          tokens-mdc-circular-progress.get-unthemable-tokens()\n      );\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    $mdc-circular-progress-color-tokens: tokens-mdc-circular-progress.get-color-tokens($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-circular-progress-theme.theme($mdc-circular-progress-color-tokens);\n\n      .mat-accent {\n        $color: inspection.get-theme-color($theme, accent);\n        @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n      }\n\n      .mat-warn {\n        $color: inspection.get-theme-color($theme, warn);\n        @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n}\n\n@mixin density($theme) {\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-circular-progress-theme.theme(\n        map.get($tokens, tokens-mdc-circular-progress.$prefix));\n  }\n}\n", "@use 'sass:color';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/badge' as tokens-mat-badge;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n// TODO(crisbeto): some of these variables aren't used anymore and should be deleted.\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Internally there are some builds that throw an error if they can't figure out the values\n// of CSS variables during compliation. This flag temporarily enables fallbacks for these builds.\n// Eventually we should clean them up.\n$_emit-fallback-vars: true;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size, $font-size-token) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n\n    @if ($font-size-token) {\n      @include token-utils.use-tokens(tokens-mat-badge.$prefix,\n        tokens-mat-badge.get-token-slots()) {\n        @include token-utils.create-token-slot(font-size, $font-size-token, $_emit-fallback-vars);\n      }\n    }\n  }\n\n  &.mat-badge-above .mat-badge-content {\n    top: math.div(-$size, 2);\n  }\n\n  &.mat-badge-below .mat-badge-content {\n    bottom: math.div(-$size, 2);\n  }\n\n  &.mat-badge-before .mat-badge-content {\n    left: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-before .mat-badge-content {\n    left: auto;\n    right: -$size;\n  }\n\n  &.mat-badge-after .mat-badge-content {\n    right: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-after .mat-badge-content {\n    right: auto;\n    left: -$size;\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before .mat-badge-content {\n      left: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-before .mat-badge-content {\n      left: auto;\n      right: math.div(-$size, 2);\n    }\n\n    &.mat-badge-after .mat-badge-content {\n      right: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-after .mat-badge-content {\n      right: auto;\n      left: math.div(-$size, 2);\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n\n    // The badge should make sure its host is overflow visible so that the badge content\n    // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n    // style `overflow: hidden` so this requires extra specificity so that it does not\n    // depend on style load order.\n    &.mat-badge {\n      overflow: visible;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, background-color);\n      @include token-utils.create-token-slot(color, text-color);\n      @include token-utils.create-token-slot(font-family, text-font, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-size, text-size, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-weight, text-weight, $_emit-fallback-vars);\n    }\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-disabled .mat-badge-content {\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, disabled-state-background-color);\n      @include token-utils.create-token-slot(color, disabled-state-text-color);\n    }\n  }\n\n  .mat-badge-hidden .mat-badge-content {\n    display: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size, small-size-text-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size, null);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size, large-size-text-size);\n  }\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-color-tokens($theme));\n  }\n\n  .mat-badge-accent {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($theme, accent));\n  }\n\n  .mat-badge-warn {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($theme, warn));\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use 'sass:color';\n@use 'sass:map';\n@use '../core/tokens/m2/mat/datepicker' as tokens-mat-datepicker;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n@use '../core/typography/typography';\n@use '../button/icon-button-theme';\n\n// TODO(crisbeto): these variables aren't used anymore and should be removed.\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _calendar-color($theme, $palette-name) {\n  $palette-color: inspection.get-theme-color($theme, $palette-name);\n  $range-color: tokens-mat-datepicker.private-get-range-background-color($palette-color);\n  $range-tokens: tokens-mat-datepicker.get-range-color-tokens($range-color);\n  $calendar-tokens:\n    tokens-mat-datepicker.private-get-calendar-color-palette-color-tokens($theme, $palette-name);\n\n  @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n    map.merge($calendar-tokens, $range-tokens));\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-color-tokens($theme));\n  }\n\n  .mat-datepicker-content {\n    &.mat-accent {\n      @include _calendar-color($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _calendar-color($theme, warn);\n    }\n  }\n\n  .mat-datepicker-toggle-active {\n    &.mat-accent {\n      $accent-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($theme, accent);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $accent-tokens);\n    }\n\n    &.mat-warn {\n      $warn-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($theme, warn);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $warn-tokens);\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-typography-tokens($theme));\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: tokens-mat-datepicker.$private-default-comparison-color,\n  $overlap-color: tokens-mat-datepicker.$private-default-overlap-color,\n  $overlap-selected-color:\n    tokens-mat-datepicker.private-get-default-overlap-selected-color($overlap-color)) {\n  $tokens: tokens-mat-datepicker.get-range-color-tokens(\n    $range-color: $range-color,\n    $comparison-color: $comparison-color,\n    $overlap-color: $overlap-color,\n    $overlap-selected-color: $overlap-selected-color,\n  );\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $tokens);\n  }\n}\n\n@mixin density($theme) {\n  // TODO(crisbeto): move this into the structural styles\n  // once the icon button density is switched to tokens.\n\n  // Regardless of the user-passed density, we want the calendar\n  // previous/next buttons to remain at density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use '@material/touch-target' as mdc-touch-target;\n\n@use '../core/tokens/token-utils';\n@use '../core/style/layout-common';\n@use '../core/mdc-helpers/mdc-helpers';\n\n// Adds styles necessary to provide stateful interactions with the button. This includes providing\n// content for the state container's ::before and ::after so that they can be given a background\n// color and opacity for states like hover, active, and focus. Additionally, adds styles to the\n// ripple and state container so that they fill the button, match the border radius, and avoid\n// pointer events.\n@mixin mat-private-button-interactive() {\n  -webkit-tap-highlight-color: transparent;\n\n  // The ripple container should match the bounds of the entire button.\n  .mat-mdc-button-ripple,\n  .mat-mdc-button-persistent-ripple,\n  .mat-mdc-button-persistent-ripple::before {\n    @include layout-common.fill;\n\n    // Disable pointer events for the ripple container and state overlay because the container\n    // will overlay the user content and we don't want to disable mouse events on the user content.\n    // Pointer events can be safely disabled because the ripple trigger element is the host element.\n    pointer-events: none;\n\n    // Inherit the border radius from the parent so that state overlay and ripples don't exceed the\n    // parent button boundaries. Note that an inherited border radius does not work properly if\n    // the actual button element does have a border because it causes the inner content to be\n    // smaller. We have special logic for stroked buttons to handle this scenario.\n    border-radius: inherit;\n  }\n\n  // This style used to be applied by the MatRipple\n  // directive, which is no longer attached to this element.\n  .mat-mdc-button-ripple {\n    overflow: hidden;\n  }\n\n  // We use ::before so that we can reuse some of MDC's theming.\n  .mat-mdc-button-persistent-ripple::before {\n    content: '';\n    opacity: 0;\n  }\n\n  // The content should appear over the state and ripple layers, otherwise they may adversely affect\n  // the accessibility of the text content.\n  .mdc-button__label {\n    z-index: 1;\n  }\n\n  // The focus indicator should match the bounds of the entire button.\n  .mat-mdc-focus-indicator {\n    @include layout-common.fill();\n  }\n\n  &:focus .mat-mdc-focus-indicator::before {\n    content: '';\n  }\n}\n\n@mixin mat-private-button-ripple($prefix, $slots) {\n  @include token-utils.use-tokens($prefix, $slots) {\n    .mat-ripple-element {\n      @include token-utils.create-token-slot(background-color, ripple-color);\n    }\n\n    .mat-mdc-button-persistent-ripple::before {\n      @include token-utils.create-token-slot(background-color, state-layer-color);\n    }\n\n    &:hover .mat-mdc-button-persistent-ripple::before {\n      @include token-utils.create-token-slot(opacity, hover-state-layer-opacity);\n    }\n\n    &.cdk-program-focused,\n    &.cdk-keyboard-focused {\n      .mat-mdc-button-persistent-ripple::before {\n        @include token-utils.create-token-slot(opacity, focus-state-layer-opacity);\n      }\n    }\n\n    &:active .mat-mdc-button-persistent-ripple::before {\n      @include token-utils.create-token-slot(opacity, pressed-state-layer-opacity);\n    }\n  }\n}\n\n// MDC's disabled buttons define a default cursor with pointer-events none. However, they select\n// :disabled for this, which does not affect anchor tags.\n// TODO(andrewseguin): Discuss with the MDC team about a mixin we can call for applying this style,\n// and note that having pointer-events may have unintended side-effects, e.g. allowing the user\n// to click the target underneath the button.\n@mixin mat-private-button-disabled() {\n  &[disabled] {\n    cursor: default;\n    pointer-events: none;\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin mat-private-button-touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin mat-private-button-touch-target($is-square) {\n  // Element used to ensure that the button has a touch target that meets the required minimum.\n  // Note that we use this, instead of MDC's built-in `mdc-button--touch` class, because the MDC\n  // class is implemented as `margin-top: 6px; margin-bottom: 6px` on the host element which\n  // goes against our rule of not having margins on the host node. Furthermore, having the margin on\n  // the button itself would require us to wrap it in another div. See:\n  // https://github.com/material-components/material-components-web/tree/master/packages/mdc-button#making-buttons-accessible\n  .mat-mdc-button-touch-target {\n    @include mdc-touch-target.touch-target(\n      $set-width: $is-square,\n      $query: mdc-helpers.$mdc-base-styles-query);\n  }\n}\n", "@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mat/icon' as tokens-mat-icon;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-colors($theme, $palette-name) {\n  $color: inspection.get-theme-color($theme, $palette-name, text);\n  $tokens: tokens-mat-icon.private-get-icon-color-tokens($color);\n  @include token-utils.create-token-values(tokens-mat-icon.$prefix, $tokens);\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-icon.$prefix,\n      tokens-mat-icon.get-color-tokens($theme));\n  }\n\n  .mat-icon {\n    &.mat-primary {\n      @include _palette-colors($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _palette-colors($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-colors($theme, warn);\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n\n", "@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/stepper' as tokens-mat-stepper;\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-color-tokens($theme));\n\n    .mat-step-header.mat-accent {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens($theme, accent));\n    }\n\n    .mat-step-header.mat-warn {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens($theme, warn));\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-density-tokens($theme));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n", "@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/toolbar' as tokens-mat-toolbar;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-styles($theme, $palette-name) {\n  @include token-utils.create-token-values(\n    tokens-mat-toolbar.$prefix,\n    tokens-mat-toolbar.private-get-color-palette-color-tokens(\n      $background-color: inspection.get-theme-color($theme, $palette-name),\n      $text-color: inspection.get-theme-color($theme, $palette-name, default-contrast)\n    )\n  );\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-color-tokens($theme));\n    }\n\n    .mat-toolbar {\n      &.mat-primary {\n        @include _palette-styles($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _palette-styles($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    // TODO(mmalerba): Stop calling this and resolve resulting screen diffs.\n    $theme: inspection.private-get-typography-back-compat-theme($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-typography-tokens($theme));\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-density-tokens($theme));\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      map.get($tokens, tokens-mat-toolbar.$prefix));\n  }\n}\n", "\r\n// Custom Theming for Angular Material\r\n// For more information: https://material.angular.io/guide/theming\r\n@use '@angular/material' as mat;\r\n// Plus imports for other components in your app.\r\n\r\n// Include the common styles for Angular Material. We include this here so that you only\r\n// have to load a single css file for Angular Material in your app.\r\n// Be sure that you only ever include this mixin once!\r\n@include mat.core();\r\n\r\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\r\n// (imported above). For each palette, you can optionally specify a default, lighter, and darker\r\n// hue. Available color palettes: https://material.io/design/color/\r\n$custom-angular-material-primary: mat.define-palette(mat.$indigo-palette);\r\n$custom-angular-material-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n// The warn palette is optional (defaults to red).\r\n$custom-angular-material-warn: mat.define-palette(mat.$red-palette);\r\n\r\n// Create the theme object. A theme consists of configurations for individual\r\n// theming systems such as \"color\" or \"typography\".\r\n$custom-angular-material-theme: mat.define-light-theme((\r\n  color: (\r\n    primary: $custom-angular-material-primary,\r\n    accent: $custom-angular-material-accent,\r\n    warn: $custom-angular-material-warn,\r\n  )\r\n));\r\n\r\n// Include theme styles for core and each component used in your app.\r\n// Alternatively, you can import and @include the theme mixins for each component\r\n// that you are using.\r\n@include mat.all-component-themes($custom-angular-material-theme);\r\n\r\n/* You can add global styles to this file, and also import other style files */\r\n\r\nhtml, body { box-sizing: border-box; margin: 0; padding: 0; }\r\nbody { font-family: Roboto, \"Helvetica Neue\", sans-serif; }\r\n\r\n\r\n/*=============================================\r\n=            CUSTOM STYLE            =\r\n=============================================*/\r\n\r\n.contenedor-centrado {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin: 1rem;\r\n}\r\n\r\nbutton {\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  color: #fff;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  padding: 0.5em 1.2em;\r\n  background: #318aac;\r\n  border: 2px solid #318aac;\r\n  position: relative; /* establecemos que de aqui parte el :before para la posicion absoluta */\r\n}\r\n\r\n.boton {\r\n  &:before {\r\n    content:\"\";\r\n    position: absolute; /* Establecemos la posicion absoluta y definimos su posición */\r\n    top: 0;\r\n    left: 0;\r\n    /* Ponemos que esté totalmente expandido */\r\n    width: 100%;\r\n    height: 100%;\r\n    background: none; /* Pero invisible, ya que con el hover, lo haremos visible */\r\n    transition: .5s;\r\n  }\r\n\r\n  &:hover:before {\r\n    background: rgba(255, 255, 255, 0.150); /* Le ponemos el fondo que se sobrepondrá */\r\n  }\r\n}\r\n\r\n/* Generamos contenido antes del botón (en este caso, EN el botón) */\r\n.boton2 {\r\n  &:before {\r\n    border-radius: 8px; /* Como vemos, tenemos que poner un radio un poco menos curvo para que ocupe todo */\r\n    content:\"\"; /* No le ponemos contenido para generar un recipiente vacio */\r\n    position: absolute; /* Asi podremos definir su posicion */\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 0px; //Que no esté desplegado\r\n    height: 100%; //Que ocupe todo el botón\r\n    /* Ponemos un fondo semi-transparente para al ponerlo por encima, darle un toque blanco al original */\r\n    background: rgba(255, 255, 255, 0.234);\r\n    transition: 1s; /* Le aplicamos una transicion para que al cambiar sus propiedades al hacer hover, tarde 1s */\r\n  }\r\n\r\n  &:hover:before {\r\n    width: 100%; /* Cuando hace hover, se despliega entero el recipiente vacío */\r\n  }\r\n}\r\n\r\n.boton3 {\r\n  color: white;\r\n  background: #318aac;\r\n  transition: all 1s ease; /* Ponemos la transición en modo desvanecerse */\r\n\r\n  &:hover {\r\n    background: none;\r\n    color: #318aac;\r\n  }\r\n}\r\n\r\n.boton4 {\r\n  &:hover {\r\n    box-shadow: 0 4px 16px rgba(49, 138, 172, 1);\r\n    transition: all 0.2s ease;\r\n  }\r\n}\r\n\r\n.boton5 {\r\n  position: relative;\r\n  outline: 1px solid;\r\n  outline-color: rgba(49, 138, 172, 0.4);\r\n  transition: all 1s cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 0 20px rgba(49, 138, 172, 0.5), 0 0 20px rgba(49, 138, 172, 0.4);\r\n    outline-color: rgba(49, 138, 172, 0);\r\n    outline-offset: 80px;\r\n    text-shadow: 1px 1px 6px #fff;\r\n  }\r\n}\r\n\r\n.boton6 {\r\n  background: none;\r\n  border: none;\r\n\r\n  &::before {\r\n    /* Aquí la diferencia es que simula el fondo del botón, para cuando haga hover en el after, se pueda desplegar bien para la derecha */\r\n    /* Lo ponemos así para que no tape las letras del elemento pero sí el fondo */\r\n    z-index: -2;\r\n    content: \"\";\r\n    border-radius: 6px;\r\n    background: #318aac;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  &::after {\r\n    z-index: -1; /* Le damos menos importancia que al elemento para que no tape las letras pero sí el fondo al desplegar */\r\n    content: \"\";\r\n    border-radius: 6px;\r\n    background: purple;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 0;\r\n    height: 100%;\r\n    transition: .5s ease;\r\n  }\r\n\r\n  &:hover::after {\r\n    /* Cuando despliega, se pone ancho completo y se ejecuta la transición */\r\n    width: 100%;\r\n  }\r\n}\r\n\r\nfooter {\r\n  bottom: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n  background-color: black;\r\n  color: white;\r\n  margin-top: 50em;\r\n}\r\n\r\n/*=====  Final de CUSTOM STYLE  ======*/"],
  "mappings": "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AAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA;IAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA;IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AGvCA,CAAA;AAAA,CAAA,0BAAA,CAAA;AHuCA;IAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EA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",
  "names": []
}
